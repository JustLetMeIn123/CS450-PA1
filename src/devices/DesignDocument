
 

                      +------------------------+
                      |          CS 450        |
                      | PROJECT 1: ALARM CLOCK |
                      |     DESIGN DOCUMENT    |
                      +------------------------+
                                  
---- GROUP 2----
 
>> Fill in the names and email addresses of your group members.
 
John Cronin <croninja@dukes.jmu.edu>
Justin Park <park3jw@dukes.jmu.edu>
Jackson Brantley <brantlja@dukes.jmu.edu>
 
---- PRELIMINARIES ----
 
>> If you have any preliminary comments on your submission or notes for 
>> me, please give them here.
 
>> Please cite any offline or online sources you consulted while
>> preparing your submission, other than the Pintos documentation, course
>> text, lecture notes, and course staff.
 
                            ALARM CLOCK
                            ===========
 
---- DATA STRUCTURES ----
 
>> A1: Copy here the declaration of each new or changed `struct' or
>> `struct' member, global or static variable, `typedef', or
>> enumeration.  Identify the purpose of each in 25 words or less.

* We created a not_ready_list struct in timer.c because we needed to create a list to push the threads into.
* We created a current thread struct that will be used to be our current thread that we are dealing with. 
* We use the current thread to set the wait time and check the number of ticks that have gone by for that particular thread 
  to unblock it after blocking.
* We added wait_time into the struct for thread in thread.h so that we could keep track of the number of ticks.
* 

---- ALGORITHMS ----
 
>> A2: Briefly describe what happens in a call to timer_sleep(),
>> including the effects of the timer interrupt handler.
 
>> A3: What steps are taken to minimize the amount of time spent in
>> the timer interrupt handler?
 
---- SYNCHRONIZATION ----
 
>> A4: How are race conditions avoided when multiple threads call
>> timer_sleep() simultaneously?
 
>> A5: How are race conditions avoided when a timer interrupt occurs
>> during a call to timer_sleep()?
 
---- RATIONALE ----
 
>> A6: Why did you choose this design?  In what ways is it superior to
>> another design you considered?
 